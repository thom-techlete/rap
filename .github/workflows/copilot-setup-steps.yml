name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read

    env:
      POSTGRES_DB: rap_db
      POSTGRES_USER: rap_user
      POSTGRES_PASSWORD: rap_db_password
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      REDIS_URL: redis://localhost:6379/0
      DJANGO_SECRET_KEY: copilot-development-secret-key
      DJANGO_DEBUG: "True"
      DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/0

    services:
      db:
        image: postgres:17
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U rap_user -d rap_db"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=12

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=12

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends postgresql-client libpq-dev build-essential gettext

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Wait for Postgres
        env:
          PGPASSWORD: rap_db_password
        run: |
          for i in $(seq 1 60); do
            pg_isready -h localhost -p 5432 -U rap_user -d rap_db && exit 0
            sleep 2
          done
          echo "Database not ready in time" >&2
          exit 1

      - name: Verify Postgres auth
        env:
          PGPASSWORD: rap_db_password
        run: |
          psql "host=localhost port=5432 user=rap_user dbname=rap_db" -c "select version();"

      - name: Django checks and migrations
        working-directory: ./web
        run: |
          python manage.py check
          python manage.py migrate --noinput

      - name: Verify Celery config
        working-directory: ./web
        run: |
          timeout 5s celery -A rap_web worker --loglevel=info --dry-run || true

      - name: Environment summary
        run: |
          python --version
          psql --version
          echo "DB: postgres://rap_user:***@localhost:5432/rap_db"
          echo "Redis: redis://localhost:6379/0"
